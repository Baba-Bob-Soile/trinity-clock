import time
import datetime
import matplotlib.pyplot as plt
import numpy as np
from ds18b20 import DS18B20

sensors = DS18B20.get_all_sensors()
no_of_sensors=len(DS18B20.get_available_sensors())
print("Number of sensors", no_of_sensors)
sensor =np.array([])
sensor_header=np.append(["Time","Time Perf"],DS18B20.get_available_sensors())
tic=time.perf_counter()
start_time=datetime.datetime.now()
start_time_formatted=start_time.strftime("%Y-%m-%d_%H-%M-%S")
print("In While Loop...")
while True:
    sensor_data= sensor_header
    tic=time.perf_counter()
    start_time=datetime.datetime.now()
    start_time_formatted=start_time.strftime("%Y-%m-%d_%H-%M-%S")
    image_name="temperature/{}.png".format(start_time_formatted)
    csv_name="temperature/{}.csv".format(start_time_formatted)
    print("In second while Loop...")    
    while time.perf_counter()-tic< 3600:
        data=np.array([])
        toc=time.perf_counter()
        time_now=datetime.datetime.now()
        time_formatted=time_now.strftime("%Y-%m-%d_%H-%M-%S")
        data=np.append(data,[time_formatted, toc-tic])
        for sensor in sensors:  
            data=np.append(data, sensor.get_temperature())

        sensor_data=np.vstack([sensor_data, data])
        np.savetxt(
            csv_name,
            sensor_data,
            fmt="%s",
            delimiter=",",
            newline ="\n",
            footer ="end of file",
            comments="#",
            header= "Data generated by numpy")
        
        numerical_data=sensor_data[1:,1:]
        numerical_data=numerical_data.astype(float)

        plt.figure()
        plt.plot(numerical_data[0:,0],numerical_data[0:,1])
        plt.plot(numerical_data[0:,0],numerical_data[0:,2])
        plt.plot(numerical_data[0:,0],numerical_data[0:,3])
        plt.plot(numerical_data[0:,0],numerical_data[0:,4])
        plt.legend(sensor_header[2:], loc="upper left")
        plt.title("Temperature vs Time")
        plt.ylabel("Temperature (degree Celsius")
        plt.xlabel("Time in seconds since "+start_time_formatted)
        plt.savefig(image_name)

        time.sleep(30)





